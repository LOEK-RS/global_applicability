---
title: "Nematodes Expected Error"
author: "Marvin Ludwig"
format: html
---





```{r setup, echo = FALSE}


knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
knitr::opts_knit$set(root.dir = "~/casestudies/global_applicability/")
library(CAST)
library(tmap)
library(raster)
```



```{r input, echo = FALSE}

loadModel = function(modelname){
    
    return(list(
        model = readRDS(paste0(modelname, "/rfmodel.RDS")),
        trainDI = readRDS(paste0(modelname, "/trainDI.RDS")),
        aoa = readRDS(paste0(modelname, "/aoa.RDS")),
        expected_error = readRDS(paste0(modelname, "/calibratedDI.RDS"))
        
    ))
    
    
    
    
}

r_rcv = loadModel("nematodes/reproduced_randomcv")
r_scv = loadModel("nematodes/reproduced_spatialcv")
r_fcv = loadModel("nematodes/reproduced_featurecv03")

```


```{r setupSCAM}
library(ggplot2)
library(scam)

scam_plot = function(AOAexp, model){
    
    calib = attr(AOAexp, "calib")
    
    ggplot(calib$group_stats, aes(x = DI, y = RMSE))+
        geom_hex()+
        scale_fill_gradientn(colors = viridis::viridis(50), trans = "log10")+
        geom_line(color='red',data =     data.frame(DI = calib$group_stats$DI,
                                                metric = predict(calib$model, calib$group_stats["DI"])),
                  aes(x=DI, y=metric))+
        geom_hline(yintercept = CAST::global_validation(model)["RMSE"], color = "orange")+
        scale_y_continuous(breaks = seq(0,25000,1000), limits = c(0,25000))
    
    
    
}
```



# Reproduced Models


## CV Errors

```{r, echo = TRUE}

CAST::global_validation(r_rcv$model)
CAST::global_validation(r_scv$model)
CAST::global_validation(r_fcv$model)

```



## TrainDI and AOA Threhold



```{r, echo = FALSE}
#| layout-ncol: 3

plot(r_rcv$trainDI)
plot(r_scv$trainDI)
plot(r_fcv$trainDI)

```



## Calibrated DI

```{r}
#| layout-ncol: 3
scam_plot(r_rcv$expected_error$AOA, r_rcv$model)
scam_plot(r_scv$expected_error$AOA, r_scv$model)
scam_plot(r_fcv$expected_error$AOA, r_fcv$model)
```


## Combined Calibration


```{r}
r_ccv_errormodel = readRDS("nematodes/reproduced_combinedcv/errormodel.RDS")
r_ccv_performance = readRDS("nematodes/reproduced_combinedcv/performance.RDS")

ggplot(r_ccv_performance, aes(x = DI, y = metric))+
    geom_hex()+
    scale_fill_gradientn(colors = viridis::viridis(50), trans = "log10")+
    geom_line(color='red',data = data.frame(DI = r_ccv_performance$DI,
                                            metric = predict(r_ccv_errormodel, r_ccv_performance["DI"])),
              aes(x=DI, y=metric))+
    geom_hline(yintercept = CAST::global_validation(r_rcv$model)["RMSE"], color = "orange")+
    geom_hline(yintercept = CAST::global_validation(r_scv$model)["RMSE"], color = "orange")+
    geom_hline(yintercept = CAST::global_validation(r_fcv$model)["RMSE"], color = "orange")
```



```{r}
r_ccv_expectedError = raster("nematodes/reproduced_combinedcv/expected_error.grd")

tm_shape(r_ccv_expectedError)+
    tm_raster(palette = viridis::viridis(50), style = "cont", breaks = c(0,2000,4000,6000,8000))
```





# SVS Models




```{r, echo = FALSE}

s_rcv = loadModel("nematodes/svs_randomcv")
s_scv = loadModel("nematodes/svs_spatialcv")
s_fcv = loadModel("nematodes/svs_featurecv03")

```


## CV Errors

```{r, echo = TRUE}

CAST::global_validation(s_rcv$model)
CAST::global_validation(s_scv$model)
CAST::global_validation(s_fcv$model)

```



## TrainDI and AOA Threhold



```{r, echo = FALSE}
#| layout-ncol: 3

plot(s_rcv$trainDI)
plot(s_scv$trainDI)
plot(s_fcv$trainDI)

```



## Calibrated DI

```{r}
#| layout-ncol: 3
scam_plot(s_rcv$expected_error$AOA, s_rcv$model)
scam_plot(s_scv$expected_error$AOA, s_scv$model)
scam_plot(s_fcv$expected_error$AOA, s_fcv$model)
```


## Combined Calibration


```{r}
s_ccv_errormodel = readRDS("nematodes/svs_combinedcv/errormodel.RDS")
s_ccv_performance = readRDS("nematodes/svs_combinedcv/performance.RDS")

ggplot(s_ccv_performance, aes(x = DI, y = metric))+
    geom_hex()+
    scale_fill_gradientn(colors = viridis::viridis(50), trans = "log10")+
    geom_line(color='red',data = data.frame(DI = s_ccv_performance$DI,
                                            metric = predict(s_ccv_errormodel, s_ccv_performance["DI"])),
              aes(x=DI, y=metric))+
    geom_hline(yintercept = CAST::global_validation(s_rcv$model)["RMSE"], color = "orange")+
    geom_hline(yintercept = CAST::global_validation(s_scv$model)["RMSE"], color = "orange")+
    geom_hline(yintercept = CAST::global_validation(s_fcv$model)["RMSE"], color = "orange")
```

```{r}
s_ccv_expectedError = raster("nematodes/svs_combinedcv/expected_error.grd")
tm_shape(s_ccv_expectedError)+
    tm_raster(palette = viridis::viridis(50), style = "cont", breaks = c(0,1000,2000,3000,4000,5000))
```


## Difference Map: Expected Error 

Reproduced - SVS :: Means that positive values, the SVS model has lower RMSE

```{r}
expected_error_diff = r_ccv_expectedError - s_ccv_expectedError


hist(expected_error_diff)

tm_shape(expected_error_diff)+
    tm_raster(palette = scico::scico(50, palette = "cork"), style = "cont", midpoint = 0 )

```






